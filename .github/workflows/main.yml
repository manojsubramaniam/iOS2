name: iOS starter workflow                
on:                
  push:          
    branches:                   
      - main                            
  pull_request:           
    branches:             
      - main     
env: 
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }} 
  PROVISIONING_PROFILE_SPECIFIER: ${{ secrets.PROVISIONING_PROFILE_SPECIFIER }}

jobs:
  build: 
    name: Build and Test default scheme using any available iPhone simulator
    runs-on: macos-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version
       
      - name: Install the Apple certificate and provisioning profile
        env:
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}
        run: |
          # Copy the certificate and provisioning profile to the correct locations
          cp Certificates.p12 $RUNNER_TEMP/build_certificate.p12
          cp DemoTest.mobileprovision $RUNNER_TEMP/build_pp.mobileprovision

          # Import the certificate to the user keychain
          security import $RUNNER_TEMP/build_certificate.p12 -P "$P12_PASSWORD" -A -t cert -f pkcs12 -k ~/Library/Keychains/login.keychain-db
          security list-keychain -d user -s ~/Library/Keychains/login.keychain-db

          # Apply the provisioning profile
          mkdir -p ~/Library/MobileDevice/Provisioning\ Profiles
          cp $RUNNER_TEMP/build_pp.mobileprovision ~/Library/MobileDevice/Provisioning\ Profiles

      - name: check Xcode version
        run: /usr/bin/xcodebuild -version

      - name: Copy Podfile
        run: cp -r SignIn/Podfile .

      - name: Install CocoaPods
        run: |
          sudo gem install cocoapods -v '1.11.2'
          pod repo list
          pod setup

      - name: Install dependencies
        run: pod install --project-directory=SignIn/

      - name: Check current directory
        run: |
          pwd
          ls -al

      - name: Navigate to SignIn folder
        run: |
          cd SignIn/
          ls

      - name: Update provisioning profile specifier in Xcode project
        run: |
          gem install xcodeproj
          ruby - <<EOF
          require 'xcodeproj'

          # Define the path to your Xcode project
          project_path = 'SignIn/SignIn.xcodeproj'

          # Define the target name
          target_name = 'SignIn'

          # Define the provisioning profile specifier
          provisioning_profile_specifier = "DemoTest"

          # Open the Xcode project
          project = Xcodeproj::Project.open(project_path)

          # Find the target
          target = project.targets.find { |t| t.name == target_name }

          # Update the provisioning profile settings
          target.build_configuration_list.build_configurations.each do |configuration|
            configuration.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = provisioning_profile_specifier
          end

          # Save the changes to the Xcode project file
          project.save
          EOF

      - name: Clear Derived Data
        run: |
          rm -rf ~/Library/Developer/Xcode/DerivedData    
      
      - name: Clean Build
        run: xcodebuild clean -workspace SignIn/SignIn.xcworkspace -scheme SignIn

      - name: Build and Archive
        id: build_archive
        run: |
          xcodebuild archive -workspace SignIn/SignIn.xcworkspace \
          -scheme SignIn -archivePath "$RUNNER_TEMP/SignIn.xcarchive" \
          -sdk iphonesimulator -configuration Debug \
          -destination 'platform=iOS Simulator,name=iPhone 13 Pro Max,OS=16.2' \
          clean archive DEVELOPMENT_TEAM="X372X3URRM" \
          PROVISIONING_PROFILE_SPECIFIER="DemoTest" -allowProvisioningUpdates \
          | tee build_output.txt
          
      - name: List files in $RUNNER_TEMP
        run: |
          ls -a "$RUNNER_TEMP"
          ls -a "$RUNNER_TEMP/SignIn.xcarchive"
          ls -a "$RUNNER_TEMP/SignIn.xcarchive/Products/Applications/"

      - name: List Archive Contents
        run: |
          ls -a "$RUNNER_TEMP/SignIn.xcarchive"
        continue-on-error: true
        
      - name: Export IPA
        id: export_ipa
        run: |
          echo '<?xml version="1.0" encoding="UTF-8"?>' > export_options.plist
          echo '<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">' >> export_options.plist
          echo '<plist version="1.0">' >> export_options.plist
          echo '<dict>' >> export_options.plist
          echo '  <key>method</key>' >> export_options.plist
          echo '  <string>development</string>' >> export_options.plist
          echo '  <key>provisioningProfiles</key>' >> export_options.plist
          echo '  <dict>' >> export_options.plist
          echo '    <key>com.newProject.SignIn</key>' >> export_options.plist
          echo '    <string>DemoTest</string>' >> export_options.plist
          echo '  </dict>' >> export_options.plist
          echo '  <key>signingStyle</key>' >> export_options.plist
          echo '  <string>manual</string>' >> export_options.plist
          echo '  <key>teamID</key>' >> export_options.plist
          echo '  <string>X372X3URRM</string>' >> export_options.plist
          echo '  <key>compileBitcode</key>' >> export_options.plist
          echo '  <false/>' >> export_options.plist
          echo '  <key>destination</key>' >> export_options.plist
          echo '  <string>export</string>' >> export_options.plist
          echo '  <key>stripSwiftSymbols</key>' >> export_options.plist
          echo '  <true/>' >> export_options.plist
          echo '  <key>thinning</key>' >> export_options.plist
          echo '  <string>&lt;none&gt;</string>' >> export_options.plist
          echo '</dict>' >> export_options.plist
          echo '</plist>' >> export_options.plist

          xcodebuild -exportArchive \
            -archivePath "$RUNNER_TEMP/SignIn.xcarchive" \
            -exportOptionsPlist export_options.plist \
            -exportPath "$RUNNER_TEMP/build" \
            -allowProvisioningUpdates \
            -verbose | tee export_output.log

